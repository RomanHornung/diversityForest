class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0.75))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexmiddle <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexmiddle
round(oindexmiddle, 3)
# Overlap with weak variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0.5+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0.5))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexweak <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexweak
round(oindexweak, 3)
# Overlap with non-informative variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexno <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexno
round(oindexno, 3)
# --> The latter result differed slightly from the
# result obtained for the other range, increase the resolution:
# Overlap with non-informative variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=200)
ygrid <- seq(-4-eps, 0+4+eps, length=200)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexno <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexno
round(oindexno, 3)
# --> Result is the same as the one further above. -> Use that result.
# Calculate the mean overlapping index moderately strong variables have with other variables:
oindexstrong <- 0.532
oindexmiddle <- 0.596
oindexweak <- 0.652
oindexno <- 0.708
oindexmeandmedium <- (50*oindexno + 2*oindexstrong + 1*oindexmiddle + 2*oindexweak)/55
oindexmeandmedium
round(oindexmeandmedium, 3)
oindexmeandmedium <- 0.698
# Determine mean overlapping index weak variables have with other variables:
d <- 0.5
# Overlap with strong variable:
eps <- 0
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 1+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,1))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexstrong <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexstrong
round(oindexstrong, 3)
# Overlap with moderately strong variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0.75+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0.75))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexmiddle <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexmiddle
round(oindexmiddle, 3)
# Overlap with other weak variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0.5+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0.5))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexweak <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexweak
round(oindexweak, 3)
# Overlap with non-informative variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexno <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexno
round(oindexno, 3)
# Increase the ranges in the numerical calculations, in order to check whether the chosen range
# was large enough:
eps <- 2
# Overlap with strong variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 1+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,1))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexstrong <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexstrong
round(oindexstrong, 3)
# Overlap with moderately strong variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0.75+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0.75))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexmiddle <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexmiddle
round(oindexmiddle, 3)
# Overlap with other weak variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0.5+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0.5))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexweak <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexweak
round(oindexweak, 3)
# Overlap with non-informative variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=100)
ygrid <- seq(-4-eps, 0+4+eps, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexno <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexno
round(oindexno, 3)
# --> The latter result differed slightly from the
# result obtained for the other range, increase the resolution:
# For non-informative variable:
# For non-informative variable:
library("mvtnorm")
xgrid <- seq(-4-eps, d+4+eps, length=200)
ygrid <- seq(-4-eps, 0+4+eps, length=200)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) dmvnorm(x=x, mean=c(0,0))
class2d <- function(x) dmvnorm(x=x, mean=c(d,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindexno <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindexno
round(oindexno, 3)
# Calculate the mean overlapping index weak variables have with other variables:
oindexstrong <- 0.576
oindexmiddle <- 0.652
oindexweak <- 0.724
oindexno <- 0.803
oindexmeandweak <- (50*oindexno + 2*oindexstrong + 2*oindexmiddle + 1*oindexweak)/55
oindexmeandweak
round(oindexmeandweak, 3)
oindexmeandweak <- 0.788
# Mean overlapping indices strong, moderately strong, and weak variables have with
# other variables (calculated above):
oindexmeandlarge <- 0.610
oindexmeandmedium <- 0.698
oindexmeandweak <- 0.788
###############################################################################
# Determine the widths of the rectangles for quantitative and qualitative interactions
# in such way that their overlapping indices are equal to the mean overlapping indices
# for strong, moderately strong, and weak variables calculated above (equal up to
# three decimal points)
###############################################################################
# The following values for the widths were all determined by trial and error:
# Strong influence:
dquallarge <- 1.772
library("mvtnorm")
xgrid <- seq(-4, dquallarge+4, length=100)
ygrid <- seq(-4, dquallarge+4, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dquallarge,dquallarge))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dquallarge,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dquallarge))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
library("mvtnorm")
xgrid <- seq(-4-2, dquallarge+4+2, length=100)
ygrid <- seq(-4-2, dquallarge+4+2, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dquallarge,dquallarge))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dquallarge,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dquallarge))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Moderately strong influence:
dqualmedium <- 1.51
# Strong influence:
library("mvtnorm")
xgrid <- seq(-4, dqualmedium+4, length=100)
ygrid <- seq(-4, dqualmedium+4, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dqualmedium,dqualmedium))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dqualmedium,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dqualmedium))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
library("mvtnorm")
xgrid <- seq(-4-2, dqualmedium+4+2, length=100)
ygrid <- seq(-4-2, dqualmedium+4+2, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dqualmedium,dqualmedium))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dqualmedium,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dqualmedium))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Increase resoluting of the grid from 100 to 200 to see whether the
# same result is achieved:
library("mvtnorm")
xgrid <- seq(-4-2, dqualmedium+4+2, length=200)
ygrid <- seq(-4-2, dqualmedium+4+2, length=200)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dqualmedium,dqualmedium))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dqualmedium,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dqualmedium))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Weak influence:
dqualweak <- 1.225
library("mvtnorm")
xgrid <- seq(-4, dqualweak+4, length=100)
ygrid <- seq(-4, dqualweak+4, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dqualweak,dqualweak))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dqualweak,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dqualweak))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
library("mvtnorm")
xgrid <- seq(-4-2, dqualweak+4+2, length=100)
ygrid <- seq(-4-2, dqualweak+4+2, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
class1d <- function(x) (1/2)*dmvnorm(x=x, mean=c(0,0)) + (1/2)*dmvnorm(x=x, mean=c(dqualweak,dqualweak))
class2d <- function(x) (1/2)*dmvnorm(x=x, mean=c(dqualweak,0)) + (1/2)*dmvnorm(x=x, mean=c(0,dqualweak))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Quantitative interactions:
# Strong influence:
dqual <- 1.772
dquant <- dqual
propcorner <- 0.649
library("mvtnorm")
xgrid <- seq(-4, dquant+4, length=100)
ygrid <- seq(-4, dquant+4, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) (1/3)*dmvnorm(x=x, mean=c(dquant,dquant)) + (1/3)*dmvnorm(x=x, mean=c(0,0)) +
(1/3)*dmvnorm(x=x, mean=c(dquant,0))
class2d <- function(x) propcorner*dmvnorm(x=x, mean=c(0,dquant)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,dquant)) +
((1-propcorner)/3)*dmvnorm(x=x, mean=c(0,0)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Expand ranges and see whether the same result is obtained:
library("mvtnorm")
xgrid <- seq(-4-2, dquant+4+2, length=100)
ygrid <- seq(-4-2, dquant+4+2, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) (1/3)*dmvnorm(x=x, mean=c(dquant,dquant)) + (1/3)*dmvnorm(x=x, mean=c(0,0)) +
(1/3)*dmvnorm(x=x, mean=c(dquant,0))
class2d <- function(x) propcorner*dmvnorm(x=x, mean=c(0,dquant)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,dquant)) +
((1-propcorner)/3)*dmvnorm(x=x, mean=c(0,0)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Moderately strong influence:
dqual <- 1.51
dquant <- dqual
propcorner <- 0.574
library("mvtnorm")
xgrid <- seq(-4, dquant+4, length=100)
ygrid <- seq(-4, dquant+4, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) (1/3)*dmvnorm(x=x, mean=c(dquant,dquant)) + (1/3)*dmvnorm(x=x, mean=c(0,0)) +
(1/3)*dmvnorm(x=x, mean=c(dquant,0))
class2d <- function(x) propcorner*dmvnorm(x=x, mean=c(0,dquant)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,dquant)) +
((1-propcorner)/3)*dmvnorm(x=x, mean=c(0,0)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
library("mvtnorm")
xgrid <- seq(-4-2, dquant+4+2, length=100)
ygrid <- seq(-4-2, dquant+4+2, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) (1/3)*dmvnorm(x=x, mean=c(dquant,dquant)) + (1/3)*dmvnorm(x=x, mean=c(0,0)) +
(1/3)*dmvnorm(x=x, mean=c(dquant,0))
class2d <- function(x) propcorner*dmvnorm(x=x, mean=c(0,dquant)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,dquant)) +
((1-propcorner)/3)*dmvnorm(x=x, mean=c(0,0)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
# Weak influence:
dqual <- 1.225
dquant <- dqual
propcorner <- 0.485
library("mvtnorm")
xgrid <- seq(-4, dquant+4, length=100)
ygrid <- seq(-4, dquant+4, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) (1/3)*dmvnorm(x=x, mean=c(dquant,dquant)) + (1/3)*dmvnorm(x=x, mean=c(0,0)) +
(1/3)*dmvnorm(x=x, mean=c(dquant,0))
class2d <- function(x) propcorner*dmvnorm(x=x, mean=c(0,dquant)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,dquant)) +
((1-propcorner)/3)*dmvnorm(x=x, mean=c(0,0)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
library("mvtnorm")
xgrid <- seq(-4-2, dquant+4+2, length=100)
ygrid <- seq(-4-2, dquant+4+2, length=100)
xygrid <- expand.grid(y=ygrid, x=xgrid)[,2:1]
# head(xygrid)
class1d <- function(x) (1/3)*dmvnorm(x=x, mean=c(dquant,dquant)) + (1/3)*dmvnorm(x=x, mean=c(0,0)) +
(1/3)*dmvnorm(x=x, mean=c(dquant,0))
class2d <- function(x) propcorner*dmvnorm(x=x, mean=c(0,dquant)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,dquant)) +
((1-propcorner)/3)*dmvnorm(x=x, mean=c(0,0)) + ((1-propcorner)/3)*dmvnorm(x=x, mean=c(dquant,0))
class1norm <- sum(apply(xygrid, 1, class1d))
class2norm <- sum(apply(xygrid, 1, class2d))
class1dnorm <- function(x) class1d(x)/class1norm
class2dnorm <- function(x) class2d(x)/class2norm
oindex <- sum(apply(xygrid, 1, function(x) min(class1dnorm(x), class2dnorm(x))))
oindex
round(oindex, 3)
dataidsmaller10000 <- c("37", "40", "43", "50", "53", "59", "164", "292", "333", "334",
"335", "336", "337", "346", "444", "446", "448", "450", "459",
"467", "472", "476", "479", "682", "683", "713", "714", "717",
"719", "721", "724", "729", "731", "733", "736", "741", "745",
"747", "748", "750", "753", "755", "758", "759", "764", "765",
"767", "770", "771", "772", "774", "777", "778", "780", "782",
"784", "787", "788", "790", "791", "795", "800", "801", "804",
"811", "814", "815", "817", "818", "820", "826", "827", "835",
"841", "848", "853", "857", "859", "860", "872", "874", "875",
"880", "882", "885", "886", "887", "890", "892", "893", "894",
"895", "900", "902", "905", "906", "907", "908", "909", "914",
"915", "919", "921", "924", "925", "927", "928", "929", "931",
"934", "945", "946", "947", "949", "950", "951", "955", "962",
"964", "965", "969", "973", "974", "983", "987", "988", "991",
"994", "997", "1005", "1009", "1011", "1013", "1014", "1015",
"1016", "1025", "1045", "1048", "1054", "1055", "1059", "1060",
"1061", "1062", "1063", "1064", "1065", "1066", "1071", "1073",
"1075", "1121", "1441", "1442", "1446", "1447", "1455", "1462",
"1463", "1464", "1467", "1473", "1480", "1488", "1490", "1495",
"1498", "1510", "1511", "1524", "31", "311", "720", "725", "728",
"737", "803", "807", "816", "819", "847", "851", "923", "954",
"958", "970", "995", "1021", "1049", "1050", "1067", "1068",
"1443", "1444", "1451", "1452", "1453", "1454", "1489", "1494",
"1504", "1547", "1570", "44", "312", "316", "735", "761", "971",
"976", "978", "980", "1020", "1022", "1042", "1043", "1056", "1069",
"1479", "1487", "1038", "1039", "1176")
length(dataidsmaller10000)
dataids2 <- setdiff(c("37", "334", "914", "915", "919", "921", "924", "925", "927", "928", "929",
"931", "335", "934", "945", "946", "947", "949", "950", "951", "955", "962",
"964", "336", "965", "969", "973", "974", "983", "987", "988", "991", "994",
"997", "337", "1005", "1009", "1011", "1013", "1014", "1015", "1016", "1025",
"1045", "1048", "346", "1054", "1055", "1059", "1060", "1061", "1062", "1063",
"1064", "1065", "1066", "444", "1071", "1073", "1075", "1121", "1441", "1442",
"1446", "1447", "1455", "1462", "446", "1463", "1464", "1467", "1473", "1480",
"1488", "1490", "1495", "1498", "1510", "448", "1511", "1524", "31", "311",
"720", "725", "728", "737", "803", "450", "807", "816", "819", "847", "851",
"923", "954", "958", "970", "995", "459", "1021", "1049", "1050", "1067", "1068",
"1443", "1444", "1451", "1452", "40", "467", "1453", "1454", "1489", "1494",
"1504", "1547", "1570", "44", "312", "472", "316", "735", "761", "476", "971",
"976", "978", "980", "1020", "1022", "1042", "479", "1043", "1056", "1069",
"1479", "1487", "682", "1038", "1039", "1176", "683", "713", "714", "717",
"719", "43", "721", "724", "729", "731", "733", "736", "741", "745", "747",
"748", "50", "750", "753", "755", "758", "759", "764", "765", "767", "770",
"771", "53", "772", "774", "777", "778", "780", "782", "784", "787", "788",
"790", "59", "791", "795", "800", "801", "804", "811", "814", "815", "817",
"818", "164", "820", "826", "827", "835", "841", "848", "853", "857", "859",
"860", "292", "872", "874", "875", "880", "882", "885", "886", "887", "890",
"892", "333", "893", "894", "895", "900", "902", "905", "906", "907", "908",
"909"), c("1042", "1038", "1039", "1176"))
length(dataids2)
head(list.files("Z:/Projects/InteractionForests/InteractionForests/Data/Datasets"))
ids <- sapply(dataids2, function(x) gsub(".Rda", "", strsplit(x, split="_id")[[1]][2]))
head(ids)
ids <- sapply(dataids2, function(x) strsplit(x, split="_id")[[1]][2])
head(ids)
allfiles <- list.files("Z:/Projects/InteractionForests/InteractionForests/Data/Datasets")
ids <- sapply(dataids2, function(x) gsub(".Rda", "", strsplit(x, split="_id")[[1]][2]))
head(ids)
ids <- sapply(allfiles, function(x) gsub(".Rda", "", strsplit(x, split="_id")[[1]][2]))
head(ids)
all(dataids2 %in% ids)
all(ids %in% dataids2)
sum(ids %in% dataids2)
allfiles <- list.files("Z:/Projects/InteractionForests/InteractionForests/Data/Datasets")
ids <- sapply(allfiles, function(x) gsub(".Rda", "", strsplit(x, split="_id")[[1]][2]))
allfiles[!(ids %in% dataids2)]
toremove <- allfiles[!(ids %in% dataids2)]
cmds <- paste("del ", toremove, sep="")
cmds
for(i in seq(along=cmds))
cat(cmds[i], "\n")
allfiles <- list.files("Z:/Projects/InteractionForests/InteractionForests/Data/Datasets")
ids <- sapply(allfiles, function(x) gsub(".Rda", "", strsplit(x, split="_id")[[1]][2]))
all(ids %in% dataids2)
all(dataids2 %in% ids)
